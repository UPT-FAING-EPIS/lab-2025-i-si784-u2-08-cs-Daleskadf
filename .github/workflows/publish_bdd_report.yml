name: Publish BDD Living Documentation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_test_and_publish_bdd:
    name: Build, Test, and Publish BDD Report
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Paso de depuración opcional para ver la estructura de archivos
    - name: List files after checkout
      run: ls -R

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        # Asegúrate que esta versión sea la correcta para tu proyecto
        # Si usaste NET 6 en el lab, debería ser '6.0.x'
        # Si usaste NET 8 como en tu imagen, '8.0.x'
        dotnet-version: '8.0.x' # AJUSTA ESTO SI ES NECESARIO

    - name: Restore dependencies for Calculator
      run: dotnet restore Calculator.sln # CORREGIDO: Solo el nombre del archivo .sln
      working-directory: Calculator

    - name: Build the Calculator project
      run: dotnet build Calculator.sln --configuration Release --no-restore # CORREGIDO
      working-directory: Calculator

    - name: Run tests for Calculator
      run: dotnet test Calculator.sln --configuration Release --no-build # CORREGIDO
      working-directory: Calculator

    - name: Install SpecFlow.Plus.LivingDoc.CLI
      run: dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI

    - name: Add .NET tools to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Generate BDD Living Documentation
      run: |
        # AJUSTA EL TARGET_FRAMEWORK a la versión real de tu proyecto
        # (ej. net6.0, net7.0, net8.0)
        TARGET_FRAMEWORK="net8.0" # CAMBIA ESTO SEGÚN TU PROYECTO
        TEST_PROJECT_PATH="Calculator.Domain.Tests"
        OUTPUT_DIR_RELATIVE="bdd-report"
        HTML_REPORT_NAME="CalculatorBDDReport.html"

        TEST_ASSEMBLY_DLL_PATH="$TEST_PROJECT_PATH/bin/Release/$TARGET_FRAMEWORK/$TEST_PROJECT_PATH.dll"
        TEST_EXECUTION_JSON_PATH="$TEST_PROJECT_PATH/bin/Release/$TARGET_FRAMEWORK/TestExecution.json"

        echo "Generating LivingDoc..."
        echo "Working Directory (for livingdoc): $(pwd)"
        echo "Test Assembly: $TEST_ASSEMBLY_DLL_PATH"
        echo "TestExecution.json: $TEST_EXECUTION_JSON_PATH"
        echo "Output HTML: $OUTPUT_DIR_RELATIVE/$HTML_REPORT_NAME"

        mkdir -p "$OUTPUT_DIR_RELATIVE"

        if [ ! -f "$TEST_ASSEMBLY_DLL_PATH" ]; then
            echo "Error: Test assembly DLL not found at $PWD/$TEST_ASSEMBLY_DLL_PATH"
            echo "Listing contents of $PWD/$TEST_PROJECT_PATH/bin/Release/$TARGET_FRAMEWORK/:"
            ls -R "$TEST_PROJECT_PATH/bin/Release/$TARGET_FRAMEWORK/"
            exit 1
        fi

        if [ ! -f "$TEST_EXECUTION_JSON_PATH" ]; then
            echo "Error: TestExecution.json not found at $PWD/$TEST_EXECUTION_JSON_PATH"
            echo "Listing contents of $PWD/$TEST_PROJECT_PATH/bin/Release/$TARGET_FRAMEWORK/:"
            ls -R "$TEST_PROJECT_PATH/bin/Release/$TARGET_FRAMEWORK/"
            exit 1
        fi

        livingdoc test-assembly "$TEST_ASSEMBLY_DLL_PATH" -t "$TEST_EXECUTION_JSON_PATH" -o "$OUTPUT_DIR_RELATIVE/$HTML_REPORT_NAME"
      working-directory: Calculator

    - name: Publish BDD report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./Calculator/bdd-report
        publish_branch: gh-pages
        destination_dir: bdd
        keep_files: true
        allow_empty_commit: false
        force_orphan: false
        enable_jekyll: false
        disable_nojekyll: false
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: "Deploy BDD Living Documentation to Pages"